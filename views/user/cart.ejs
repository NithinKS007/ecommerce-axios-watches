<%- include('../layouts/userLayouts/header') %>
<div class="bg-white sticky-top">
  <!-- Navbar -->
  <nav class="navbar navbar-expand-lg navbar-light bg-white">
    <div class="container">
      <!-- Logo with Dummy Image -->
      <a class="navbar-brand d-flex align-items-center" href="">
        <span style="font-size: 32px; font-weight: bold; color: black"
          >AXIOS</span
        ><sup style="color: black">Â®</sup>
      </a>
      <!-- Search Form -->
      <form
        class="d-flex mx-auto w-50"
        id="searchForm"
        action="/showcase"
        method="GET"
      >
        <input
          class="form-control search-bar"
          style="
            border: none;
            box-shadow: 0px 0px 6px rgba(0, 0, 0, 0.3);

            padding: 20px 15px;
            border-radius: 5px;
            height: 48px;
          "
          type="search"
          name="searchProduct"
          placeholder="Search for items..."
          aria-label="Search"
          value="<%= searchProduct || '' %>"
        />
      </form>

      <!-- Icons -->
      <ul
        style="margin-right: 10px"
        class="navbar-nav mb-2 mb-lg-0 d-flex align-items-center"
      >
        <li class="nav-item me-3">
          <a
            class="nav-link"
            href="/wishlist"
            style="color: black; font-weight: bold; font-size: 24px"
          >
            <i class="fi-rs-heart"></i>
          </a>
        </li>
        <li class="nav-item me-3">
          <a
            class="nav-link"
            href="/cart"
            style="color: black; font-weight: bold; font-size: 24px"
          >
            <i class="fi-rs-shopping-cart"></i>
          </a>
        </li>
        <li class="nav-item me-3">
          <a
            class="nav-link"
            href="/profile"
            style="color: black; font-weight: bold; font-size: 24px"
          >
            <i class="fi-rs-user"></i>
          </a>
        </li>
      </ul>
    </div>
  </nav>

  <div class="container" style="height: 70px">
    <div class="row">
      <div class="col-12 text-center mt-3">
        <ul style="user-select: none" class="list-inline">
          <li class="list-inline-item">
            <a
              href="/showcase?targetGroup=men"
              style="
                color: black;
                font-weight: bold;
                font-size: 20px;
                padding-right: 10px;
              "
              >Mens</a
            >
          </li>
          <li class="list-inline-item">
            <a
              href="/showcase?targetGroup=women"
              style="
                color: black;
                font-weight: bold;
                font-size: 20px;
                padding-right: 10px;
              "
              >Womens</a
            >
          </li>
          <li class="list-inline-item">
            <a
              href="/showcase?targetGroup=kids"
              style="
                color: black;
                font-weight: bold;
                font-size: 20px;
                padding-right: 10px;
              "
              >Kids</a
            >
          </li>
          <li class="list-inline-item">
            <a
              href="/"
              style="
                color: black;
                font-weight: bold;
                font-size: 20px;
                padding-right: 10px;
              "
              >About Us</a
            >
          </li>
          <li class="list-inline-item">
            <a
              href="/"
              style="
                color: black;
                font-weight: bold;
                font-size: 20px;
                padding-right: 10px;
              "
              >Contact</a
            >
          </li>
        </ul>
      </div>
    </div>
  </div>
</div>
<div class="container mt-5" id="mainContainer" style="height: 700px">
  <div class="row">
    <% if (cartDetails.length === 0 || cartDetails[0].items.length === 0) { %>
      <div class="col-md-8 text-center" id="emptyCartCard" style="display: block; margin-top: 40px;">
        <div class="card" style="max-width: 600px; margin: 0 auto; padding: 20px;">
          <div class="card-body">
            <h5 class="card-title">Your Cart is Currently Empty</h5>
            <p class="card-text">It looks like you haven't added any items to your cart yet.</p>
            <a href="/home" class="btn btn-primary">Browse Products</a>
          </div>
        </div>
      </div>
    <% } else { %>
      <div class="col-md-8" id="sendCartItem">
        <% cartDetails.forEach(cartItem => { %>
          <% cartItem.items.forEach(item => { %>
            <div class="card mb-3" id="productContainer<%= item.product?._id %>">
              <input class="form-check-input" type="checkbox"
                     style="margin-left: 5px;"
                     value="<%= item.product?._id %>"
                     name="selectedCartItem"
                     <% if (item.isSelected) { %> checked <% } %>>
              <div class="row no-gutters">
                
                <div class="col-md-4 d-flex align-items-center justify-content-center">
                  <a href="/products/<%= item.product?._id %>">
                  <img src="/productImages/<%= item.product?.images[0]?.filename %>"
                       class="card-img"
                       style="width: 150px; height: 150px; object-fit: cover; margin-bottom: 15px;"
                       alt="Product Image">
                      </a>
                       <% if (new Date(item?.product?.productOffer?.offerExpiryDate) > new Date() && item?.product?.productOffer?.offerStatus && item?.product?.productSalesPriceAfterOfferDiscount) { %>
                        <div class="position-absolute bg-danger text-white p-1" style="top: 10px; right: 10px; font-size: 0.9em; border-radius: 3px;">
                            <%= item?.product?.productOffer?.offerDiscountPercentage %>% OFF
                        </div>
                    <% } %>
                </div>
                <div class="col-md-8">
                  <div class="card-body">
                    <a href="/products/<%= item.product?._id %>">
                    <h5 class="card-title text-truncate" style="max-width: 290px;"><%= item.product?.name %></h5>

                  </a>
                    <% if (new Date(item?.product?.productOffer?.offerExpiryDate) > new Date()&&item?.product?.productOffer!==0&&item?.product?.productSalesPriceAfterOfferDiscount&&item?.product?.productOffer?.offerStatus) { %>
                  
                      <strong>Price:</strong> <%= item?.productSalesPriceAfterOfferDiscount.toFixed(2) %>
                      <del><%= item?.product?.salesPrice.toFixed(2) %></del>
                  <% } else { %>
                    <strong>Price:</strong> <%= item?.product?.salesPrice.toFixed(2) %>
                  <% } %>
                  
                  
                    <div class="d-flex justify-content-between align-items-center">
                      <div class="d-flex align-items-center">
                        <div class="me-2">Qty:</div>
                        <button class="btn btn-sm btn-secondary decrease-quantity" data-product-item-id="<%= item.product?._id %>">-</button>
                        <span class="quantity-display mx-2"><%= item.quantity %></span>
                        <button class="btn btn-sm btn-secondary increase-quantity" data-product-item-id="<%= item.product?._id %>">+</button>
                        <% if (item.product?.stock > 0) { %>
                          <% if (item.product.stock < 3) { %>
                            <span class="product-stock" style="color: red; font-size: 14px; font-weight: 600; margin-left: 5px;">In Stock (<%= item.product.stock %> items)</span>
                          <% } else { %>
                            <span class="product-stock" style="color: green; font-size: 14px; font-weight: 600; margin-left: 5px;">In Stock (<%= item.product.stock %> items)</span>
                          <% } %>
                        <% } else { %>
                          <span class="product-stock" style="color: red; font-size: 14px; font-weight: 600;">Out of Stock</span>
                        <% } %>
                      </div>
                      <span class="text-secondary" onclick="removeFromCart('<%= item.product?._id %>')" style="text-decoration: none; cursor: pointer;margin-bottom: 53px;color: black;">Remove</span>
                    </div>
                  </div>
                </div>
              </div>
            </div>
          <% }); %>
        <% }); %>
      </div>
      <% } %>
    
    <div class="col-md-4" >
      <div class="card mb-3">        
        <div class="card-body" >
          <p class="card-text d-flex justify-content-between">
            <span id="selection"><%=selectedItemsCount%> items selected</span>
            <span id="subTotalPrice">Rs <%= subTotal > 0 ? subTotal.toFixed(2) : '0.00' %></span>
          </p>
          <p class="card-text d-flex justify-content-between">
            <span>Coupon Discount</span>
            <span id="couponDiscount" class="text-success">Rs 0.00</span>
          </p>
          <hr>
          <p class="card-text d-flex justify-content-between"style="font-size: 18px;">
            <strong>Total Amount</strong>

            <strong><span id="totalPrice">Rs <%= finalPrice > 0 ? finalPrice.toFixed(2) : '0.00' %></span></strong>

          </p>
          <p style="font-size: 12px; color: #777;">
            (Inclusive of all taxes)
        </p>
        </div>
        <div class="card-body">
          <input type="text" id="couponCode"    class="form-control" placeholder="Select a coupon" disabled style="display: none;">
          <button type="button" id="selectCouponButton" class="btn btn-primary btn-md w-100 mt-2" onclick="openCouponModal()">Apply Coupon</button>
          <div id="couponButtons" style="display: none; margin-top: 10px;">
            <div class="row">   
              <div class="col">     
                <button type="button" class="btn btn-primary btn-md w-100" onclick="removeCoupon()">Remove</button>
              </div>
            </div>
          </div>
        </div>
        <div class="row">
        <div class="col" id="checkout">
          <button type="button" class="btn custom-button btn-lg w-100" >Check Out</button>
            </div>
          </div>
        </div>
      </div>
    </div>

</div>
<div class="modal fade" id="couponModal" tabindex="-1" aria-labelledby="couponModalLabel" aria-hidden="true">
  <div class="modal-dialog modal-dialog-centered">
    <div class="modal-content" style=" background-color: #f8f9fa;border-radius: 10px;">
      <div class="modal-header" style=" border-bottom: none;padding-bottom: 0;">
        <h5 class="modal-title" style="  font-weight: bold;color: #333;" id="couponModalLabel">Available Coupons</h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
      </div>
      <div class="modal-body">
        <div class="row">
          <% availableCoupons.forEach(coupon => { %>
            <div class="col-md-6 mb-3">
              <div class="card h-100 shadow-sm border-0">
                <div class="card-body d-flex flex-column justify-content-between">
                  <div>
                    <h6 class="card-title text-dark">
                      <i class="bi bi-ticket-fill me-2"></i> 
                      <%= coupon.couponName %>
                    </h6>                    
                    <p class="card-text">
                      <strong>Discount:</strong> <%= coupon.couponDiscount %>% 
                    </p>
                    <p class="card-text">
                      <strong>Min Amount:</strong> <%= coupon.minAmount %> Rs
                    </p>
                    <p class="card-text">
                      <strong>Max Discount Amount:</strong> <%= coupon.maxAmount %> Rs
                    </p>
                    <p class="card-text">
                      <strong>Code:</strong> <span class="badge bg-secondary"><%= coupon.couponCode %></span>
                    </p>
                  </div>
                  <button type="button" class="btn btn-primary btn-sm mt-2" onclick="selectCoupon('<%= coupon.couponCode %>','<%= coupon.couponDiscount %>')">
                    <i class="bi bi-check-circle me-1"></i> Apply
                  </button>
                </div>
              </div>
            </div>
          <% }); %>
        </div>
      </div>
    </div>
  </div>
</div>

<script>

  const applySwalButtonStyles = () => {
    const confirmButton = Swal.getConfirmButton();
    const cancelButton = Swal.getCancelButton();

    confirmButton.style.width = "100%";
    confirmButton.style.margin = "5px 0";
    confirmButton.style.border = "1px solid #000";
    confirmButton.style.borderRadius = "0.25rem";
    confirmButton.style.backgroundColor = "#000";
    confirmButton.style.color = "#fff";

    cancelButton.style.width = "100%";
    cancelButton.style.margin = "5px 0";
    cancelButton.style.border = "1px solid #000";
    cancelButton.style.borderRadius = "0.25rem";
    cancelButton.style.color = "#000";

    if (window.innerWidth <= 768) {
      confirmButton.style.width = "100%";
      cancelButton.style.width = "100%";
    } else if (window.innerWidth > 768 && window.innerWidth <= 992) {
      confirmButton.style.width = "150px";
      cancelButton.style.width = "150px";
    }
  };
  const openCouponModal = () => {
    const selectedItemsCount = document.querySelectorAll(
      'input[name="selectedCartItem"]:checked'
    ).length;

    if (selectedItemsCount === 0) {
      Swal.fire({
        icon: "warning",
        text: "Select an item to apply a coupon",
        confirmButtonText: "OK",
        confirmButtonColor: "#000000",
      });
      return;
    }
    const couponModal = new bootstrap.Modal(
      document.getElementById("couponModal")
    );
    couponModal.show();
  };

  const selectCoupon = async (couponCode) => {
    document.getElementById("couponCode").value = couponCode;
    document.getElementById("selectCouponButton").style.display = "none";
    document.getElementById("couponButtons").style.display = "block";

    const couponModal = bootstrap.Modal.getInstance(
      document.getElementById("couponModal")
    );
    couponModal.hide();
    await applyCoupon();
  };

  const removeCoupon = async () => {
    document.getElementById("couponCode").value = "";
    document.getElementById("selectCouponButton").style.display = "block";
    document.getElementById("couponButtons").style.display = "none";

    try {
      const response = await fetch(`/cart/coupon`, {
        method: "DELETE",
        headers: {
          "Content-Type": "application/json",
        },
      });

      if (!response.ok) {
        throw new Error("Network response was not ok");
      }

      const data = await response.json();

      if (data) {
        document.getElementById(
          "subTotalPrice"
        ).innerText = `Rs ${data.subTotal.toFixed(2)}`;
        document.getElementById(
          "totalPrice"
        ).innerText = `Rs ${data.finalPrice.toFixed(2)}`;
        document.getElementById(
          "couponDiscount"
        ).innerText = `Rs ${data.discount.toFixed(2)}`;
        Swal.fire({
          icon: "success",
          text: "Coupon removed successfully.",
          toast: true,
          position: "top-right",
          showConfirmButton: false,
          timerProgressBar: true,
          timer: 3000,
        });
      }
    } catch (error) {
      console.error("There was a problem with the fetch operation:", error);
      Swal.fire({
        icon: "error",
        text: "An error occurred while removing the coupon.",
        confirmButtonText: "OK",
        confirmButtonColor: "#000000",
      });
    }
  };

  //for adding the coupon amount
  const applyCoupon = async () => {
    const couponCodeElement = document.getElementById("couponCode");

    const couponCode = couponCodeElement ? couponCodeElement.value : "";

    try {
      const response = await fetch(`/cart/coupon`, {
        method: "POST",
        headers: {
          "Content-Type": "application/json",
        },
        body: JSON.stringify({ couponCode }),
      });

      const data = await response.json();

      if (data.success) {
        document.getElementById(
          "subTotalPrice"
        ).innerText = `Rs ${data.subTotal.toFixed(2)}`;
        document.getElementById(
          "totalPrice"
        ).innerText = `Rs ${data.finalPrice.toFixed(2)}`;
        document.getElementById(
          "couponDiscount"
        ).innerText = `Rs ${data.discount.toFixed(2)}`;

        document.getElementById("couponButtons").style.display = "block";

        Swal.fire({
          icon: "success",
          text: "Coupon applied successfully.",
          toast: true,
          position: "top-right",
          showConfirmButton: false,
          timerProgressBar: true,
          timer: 3000,
        });
      } else {
        Swal.fire({
          icon: "error",
          text: data.message,
          confirmButtonText: "OK",
          confirmButtonColor: "#000000",
        });
      }
    } catch (error) {
      console.error("Error applying coupon:", error);

      Swal.fire({
        icon: "error",
        text: "An error occurred while applying the coupon.",
        confirmButtonText: "OK",
        confirmButtonColor: "#000000",
      });
    }
  };

  const removeFromCart = (productId) => {
    Swal.fire({
      text: "Are you sure ? " + " You want remove the item",
      showCancelButton: true,
      confirmButtonColor: "#000000",
      cancelButtonColor: "#ffffff",
      confirmButtonText: "Yes, Remove",
      cancelButtonText: "No, cancel!",
       didOpen: () => {
          applySwalButtonStyles();
        },
    }).then((result) => {
      if (result.isConfirmed) {
        const couponCodeElement = document.getElementById("couponCode");
        const couponCode = couponCodeElement ? couponCodeElement.value : "";

        const productContainer = document.getElementById(
          `productContainer${productId}`
        );

        const mainContainer = document.getElementById(`mainContainer`);

        fetch(`/cart`, {
          method: "DELETE",
          headers: {
            "Content-Type": "application/json",
          },

          body: JSON.stringify({ productId, couponCode }),
        })
          .then((response) => {
            if (!response.ok) {
              throw new Error("Network response was not ok");
            }

            return response.json();
          })
          .then((data) => {
            let productName = data.productName.name;

            if (data.isEmpty) {
              sessionStorage.setItem(
                "successMessage",
                `Successfully removed ${productName} from your cart`
              );

              window.location.reload();
            } else {
              if (productContainer) productContainer.remove();
              Swal.fire({
                icon: "success",
                text: `Successfully removed ${productName} from your cart`,
                toast: true,
                position: "top-right",
                showConfirmButton: false,
                timerProgressBar: true,
                timer: 3000,
              });
            }
            const subTotalPrice = document.getElementById("subTotalPrice");
            const totalPrice = document.getElementById("totalPrice");
            const selection = document.getElementById("selection");
            const discount = document.getElementById("couponDiscount");

            if (subTotalPrice)
              subTotalPrice.innerHTML = `Rs ${
                data.subTotal ? data.subTotal : 0
              }`;

            if (totalPrice)
              totalPrice.innerHTML = `Rs ${
                data.finalPrice ? data.finalPrice : 0
              }`;

            if (selection) {
              const selectedItemsCount = data.cartDetails.items.filter(
                (item) => item.isSelected
              ).length;
              selection.innerHTML = `${
                selectedItemsCount
                  ? `${selectedItemsCount} items selected`
                  : "No items selected"
              }`;
            }

            if (
              data.discount === 0 &&
              data.subTotal === data.finalPrice &&
              discount &&
              discount.value !== "" &&
              couponCodeElement.value !== ""
            ) {
              discount.innerHTML = `Rs ${data.discount ? data.discount : 0}`;
              couponCodeElement.value = "";
              document.getElementById("selectCouponButton").style.display =
                "block";
              document.getElementById("couponButtons").style.display = "none";
            }
          })
          .catch((error) => {
            console.log(`error while fetching the data`, error.message);

            Swal.fire({
              icon: "error",
              text: "An error occurred while removing the item",
              confirmButtonText: "OK",
              confirmButtonColor: "#000000",
            });
          });
      }
    });
  };

  const decreaseButtons = document.querySelectorAll(".decrease-quantity");
  const increaseButtons = document.querySelectorAll(".increase-quantity");

  function updateQuantity(productId, newQuantity) {
    const checkbox = document.querySelector(`input[value="${productId}"]`);
    if (!checkbox.checked) {
      Swal.fire({
        icon: "warning",
        text: "Please select a product",
        confirmButtonText: "OK",
        confirmButtonColor: "#000000",
      });
      return;
    }
    if (newQuantity >= 1 && newQuantity <= 5) {
      const couponCode = document.getElementById("couponCode").value;
      const subTotalPrice = document.getElementById("subTotalPrice");
      const totalPrice = document.getElementById("totalPrice");
      const discount = document.getElementById("couponDiscount");
      const checkbox = document.querySelector(`input[value="${productId}"]`);

      fetch(`/cart`, {
        method: "PATCH",
        headers: {
          "Content-Type": "application/json",
        },
        body: JSON.stringify({ productId, quantity: newQuantity, couponCode }),
      })
        .then((response) => {
          if (!response.ok) {
            throw new Error("Network response was not ok");
          }
          return response.json();
        })
        .then((data) => {
          if (data.success) {
            subTotalPrice.innerHTML = `Rs ${data.subTotal ? data.subTotal : 0}`;
            totalPrice.innerHTML = `Rs ${
              data.finalPrice ? data.finalPrice : 0
            }`;
            discount.innerHTML = `Rs ${data.discount ? data.discount : 0}`;

            // Update the quantity display
            const quantityDisplay = document.querySelector(
              `[data-product-item-id="${productId}"]`
            ).nextElementSibling;
            quantityDisplay.textContent = newQuantity;
          } else if (data.quantity === false) {
            Swal.fire({
              icon: "warning",
              text: "Stock is insufficient",
              confirmButtonText: "OK",
              confirmButtonColor: "#000000",
            });
          }
        })
        .catch((error) => {
          Swal.fire({
            icon: "error",
            text: `An error occurred: ${error.message}`,
            confirmButtonText: "OK",
            confirmButtonColor: "#000000",
          });
        });
    } else {
      Swal.fire({
        icon: "warning",
        text: "You can only select up to 5 items at a time",
        confirmButtonText: "OK",
        confirmButtonColor: "#000000",
      });
    }
  }

  function handleQuantityChange(action, button) {
    const productId = button.getAttribute("data-product-item-id");

    const quantityDisplay =
      action === "decrease"
        ? button.nextElementSibling
        : button.previousElementSibling;
    const currentQuantity = parseInt(quantityDisplay.textContent);
    const newQuantity =
      action === "decrease" ? currentQuantity - 1 : currentQuantity + 1;

    if (newQuantity >= 1 && newQuantity <= 5) {
      updateQuantity(productId, newQuantity);
    } else {
      Swal.fire({
        icon: "warning",
        text: "Quantity must be One to Five",
        confirmButtonText: "OK",
        confirmButtonColor: "#000000",
      });
    }
  }

  decreaseButtons.forEach((button) => {
    button.addEventListener("click", () =>
      handleQuantityChange("decrease", button)
    );
  });

  increaseButtons.forEach((button) => {
    button.addEventListener("click", () =>
      handleQuantityChange("increase", button)
    );
  });

  let selectedProductIds = [];

  const updateSelectedProducts = () => {
    const checkboxes = document.querySelectorAll(
      'input[name="selectedCartItem"]'
    );

    selectedProductIds = Array.from(checkboxes)
      .filter((checkbox) => checkbox.checked)
      .map((checkbox) => checkbox.value);

    sendToBackend();
    if (selectedProductIds.length === 0) {
      const subTotalPrice = document.getElementById("subTotalPrice");
      const totalPrice = document.getElementById("totalPrice");
      const selection = document.getElementById("selection");
      subTotalPrice.innerHTML = "Rs 0.00";
      totalPrice.innerHTML = "Rs 0.00";
      selection.innerHTML = `0 items selected`;
    }
  };

  document
    .querySelectorAll('input[name="selectedCartItem"]')
    .forEach((checkbox) => {
      checkbox.addEventListener("change", updateSelectedProducts);
    });

  const sendToBackend = () => {
    const subTotalPrice = document.getElementById("subTotalPrice");
    const discount = document.getElementById("couponDiscount");
    const deliveryCharge = document.getElementById("deliveryCharge");
    const totalPrice = document.getElementById("totalPrice");
    const selection = document.getElementById("selection");
    const couponCode = document.getElementById("couponCode").value;

    fetch("/cart", {
      method: "PATCH",
      headers: {
        "Content-Type": "application/json",
      },
      body: JSON.stringify({ selectedProductIds, couponCode }),
    })
      .then((response) => {
        if (!response.ok) {
          throw new Error("Network response was not ok");
        }
        return response.json();
      })
      .then((data) => {
        if (data.finalPrice && data.cartDetails && data.cartDetails.items) {
          subTotalPrice.innerHTML = `Rs ${data.subTotal ? data.subTotal : 0}`;
          totalPrice.innerHTML = `Rs ${data.finalPrice ? data.finalPrice : 0}`;
          discount.innerHTML = `Rs ${data.discount ? data.discount : 0}`;
          const selectedItemsCount = data.cartDetails.items.filter(
            (item) => item.isSelected
          ).length;
          selection.innerHTML = `${
            selectedItemsCount
              ? `${selectedItemsCount} items selected `
              : "No items selected"
          }`;
        }
      })
      .catch((error) => {
        Swal.fire({
          icon: "error",
          title: "Error",
          text: `An error occurred: ${error.message}`,
          confirmButtonText: "OK",
          confirmButtonColor: "#000000",
        });
      });
  };

  document.addEventListener("DOMContentLoaded", function () {
    const checkboxes = document.querySelectorAll(".form-check-input");
    const checkoutButton = document.getElementById("checkout");
    let values = [];

    checkboxes.forEach(function (checkbox) {
      handleCheckboxChange(checkbox);

      checkbox.addEventListener("change", function () {
        handleCheckboxChange(this);
      });
    });

    function handleCheckboxChange(checkbox) {
      const value = checkbox.value;

      if (checkbox.checked) {
        if (!values.includes(value)) {
          values.push(value);
        }
      } else {
        values = values.filter((v) => v !== value);
      }

      checkoutButton.removeEventListener("click", handleCheckoutClick);
      checkoutButton.removeEventListener("click", handleNoSelection);

      if (values.length > 0) {
        checkoutButton.addEventListener("click", handleCheckoutClick);
      } else {
        checkoutButton.addEventListener("click", handleNoSelection);
      }
    }

    function handleCheckoutClick() {
      const checkoutUrl = `/checkout`;

      window.location.href = checkoutUrl;
    }

    function handleNoSelection(event) {
      event.preventDefault();
      Swal.fire({
        icon: "warning",
        text: "Please select at least one item before proceeding.",
        confirmButtonText: "OK",
        confirmButtonColor: "#000000",
      });
    }

    const successMessage = sessionStorage.getItem("successMessage");

    if (successMessage) {
      Swal.fire({
        icon: "success",
        text: successMessage,
        toast: true,
        position: "top-right",
        showConfirmButton: false,
        timerProgressBar: true,
        timer: 3000,
      });

      sessionStorage.removeItem("successMessage");
    }
  });
</script>

<%- include('../layouts/userLayouts/footer') %>