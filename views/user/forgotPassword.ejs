<%- include('../layouts/adminLayouts/header') %>
<main class="d-flex align-items-center justify-content-center vh-100">
  <section class="content-main">
    <div class="card mx-auto card-login" style="width: 380px">
      <div class="card-body">
        <h4 class="card-title mb-4 text-center">Forgot Password</h4>
        <div class="mb-3">
          <input
            class="form-control"
            name="email"
            id="email"
            placeholder="Enter your email"
          />
          <span id="emailError" class="text-danger"></span>
        </div>

        <div class="mb-4">
          <button
            type="submit"
            id="sendLinkButton"
            class="btn btn-primary w-100"
          >
            Send Reset Link
          </button>
        </div>

        <p class="text-center mb-4">
          Remember your password? <a href="/signin">Sign in</a>
        </p>
      </div>
    </div>
  </section>
</main>

<script>
  document.addEventListener("DOMContentLoaded", () => {
    const sendLinkButton = document.getElementById("sendLinkButton");
    const emailInput = document.getElementById("email");
    const emailError = document.getElementById("emailError");

    sendLinkButton.addEventListener("click", async () => {
      const isEmailValid = validateEmail();

      if (!isEmailValid) {
        return;
      }

      const email = emailInput.value.trim();
      sendLinkButton.innerHTML = `Loading...`;
      sendLinkButton.disabled = true;
      try {
        const response = await fetch(`/forgotPassword`, {
          method: "PATCH",

          headers: {
            "Content-Type": "application/json",
          },

          body: JSON.stringify({ email }),
        });

        const data = await response.json();

        if (data.success) {
          emailInput.value = "";
          Swal.fire({
            icon: "success",
            text: "A reset link has been sent to your email.",
            timer: 3000,
            timerProgressBar: true,
            toast: true,
            position: "top-right",
            showConfirmButton: false,
          });
        } else {
          Swal.fire({
            icon: "error",
            text: data.message || "An error occurred. Please try again.",
            confirmButtonText: "OK",
            confirmButtonColor: "#000000",
          });
        }
      } catch (error) {
        console.error("Error:", error);

        Swal.fire({
          icon: "error",
          text: "An error occurred. Please try again.",
          confirmButtonText: "OK",
          confirmButtonColor: "#000000",
        });
      } finally {
        // Revert button back to original state
        sendLinkButton.innerHTML = "Send Reset Link";
        sendLinkButton.disabled = false;
      }
    });

    const validateEmail = () => {
      const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;

      if (emailInput.value.trim() === "") {
        emailError.textContent = "* Email is required";
        return false;
      } else if (!emailRegex.test(emailInput.value.trim())) {
        emailError.textContent = "* Enter a valid email";
        return false;
      } else {
        emailError.textContent = "";
        return true;
      }
    };

    emailInput.addEventListener("input", validateEmail);
  });
</script>

<%- include('../layouts/adminLayouts/footer') %>
