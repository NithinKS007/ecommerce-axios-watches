<%- include('../layouts/userLayouts/header') %>
    <%- include('../layouts/userLayouts/navbar1') %>

    <style>
        .accordion-item {
            border: none; /* Remove border */
            border-bottom: 1px solid #e0e0e0; /* Light bottom border */
        }
    
        .accordion-header {
            background-color: #f5f5f5; /* Light gray background */
            padding: 15px; /* More padding */
            font-size: 16px; /* Slightly larger font */
            font-weight: 600; /* Bold text */
            cursor: pointer; /* Pointer cursor */
            border-radius: 4px;
        }
    
        .accordion-button {
            background: none; /* Remove button background */
            border: none; /* Remove button border */
            font-size: 16px;
            padding: 10px 0;
            color: #333; /* Dark text color */
            text-align: left;
            width: 100%; /* Full width */
        }
    
        .accordion-button:focus {
            box-shadow: none; /* Remove focus outline */
        }
    
        .accordion-button.collapsed {
            color: #333;
        }
    
        .accordion-button::after {
            display: none; /* Remove the default caret */
        }
    
        .accordion-body {
            padding: 15px 15px 15px 60px; /* Add more padding, align text with image */
            background-color: #fff; /* White background */
        }
    
        .accordion-body img {
            margin-right: 15px; /* Space between image and text */
        }
    
        .product-details {
            display: flex;
            align-items: center;
        }
    
        .product-details img {
            width: 80px; /* Larger image */
            height: 80px;
            object-fit: cover;
            margin-right: 20px;
        }
    
        .product-info {
            font-size: 14px;
            color: #555;
        }
    
        .product-info p {
            margin: 0;
            padding: 0;
        }
    
        .product-price {
            font-size: 16px;
            font-weight: bold;
            color: #388e3c; /* Green color for price */
        }
    
        .remove-btn, .save-btn {
            margin-top: 10px;
            font-size: 14px;
            color: #007bff;
            cursor: pointer;
        }
    </style>
            <main class="container my-5">
                <h1 style=" font-size: 24px;
                font-weight: bold;
                color: #333;
                margin-bottom: 16px;
              " class="h2 mb-4">CHECKOUT</h1>
                <div class="row">
                    <div class="col-lg-8">
                        <h4 style=" font-size: 24px;
                        font-weight: bold;
                        color: #333;
                        margin-bottom: 16px;
                      ">Items purchased</h4>
                        <!-- Shipping Address Section -->
                            
                            <div class="card shadow-sm mb-4">
                                <div class="accordion" id="productAccordion">
                                    <% selectedItems.forEach((item, index) => { %>
                                    <div class="accordion-item">
                                        <h2 class="accordion-header" id="productHeading<%= index %>">
                                            <button class="accordion-button collapsed" type="button"
                                                data-bs-toggle="collapse" data-bs-target="#productCollapse<%= index %>"
                                                aria-expanded="false" aria-controls="productCollapse<%= index %>">
                                                <%= item.product.name %>
                                            </button>
                                        </h2>
                                        <div id="productCollapse<%= index %>" class="accordion-collapse collapse"
                                            aria-labelledby="productHeading<%= index %>"
                                            data-bs-parent="#productAccordion">
                                            <div class="accordion-body">
                                                <div class="product-details">
                                                    <img src="/productImages/<%= item.product.images[0]?.filename %>" alt="Product Image">
                                                    <div class="product-info">
                                                        <p><%= item.product.name %></p>
                                                        <p class="product-price">Rs <%= item.price %></p>
                                                       
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <% }); %>
                                </div>
                            </div>
                            
                       

                        <div class="card-body">
                            <h3 class="card-title h5 mb-3" style=" font-size: 24px;
                            font-weight: bold;
                            color: #333;
                            margin-bottom: 16px;
                          ">Select a shipping address</h3>



                            <button id="showButton" class="btn btn-outline-primary" style=" margin-bottom: 10px;">
                                <i class="bi bi-plus-lg"></i> Add New Address
                            </button>

                            <!-- for editing address starts-->
                            <div id="editAddressForm" style="display: none;">
                                <form id="newAddressForm">
                                    <input type="hidden" value="address">
                                    <div class="mb-3">
                                        <input type="text" id="addressNameInput" class="form-control" name="name"
                                            placeholder="Name" required>
                                    </div>
                                    <div class="mb-3">
                                        <input type="tel" id="addressPhoneInput" class="form-control" name="phone"
                                            placeholder="10-digit mobile number" required>
                                    </div>
                                    <div class="mb-3">
                                        <input type="text" id="addressPincodeInput" class="form-control" name="pincode"
                                            placeholder="Pincode" required>
                                    </div>
                                    <div class="row mb-3">
                                        <div class="col">
                                            <input type="text" id="addressLocalityInput" class="form-control"
                                                name="locality" placeholder="Locality" required>
                                        </div>
                                        <div class="col">
                                            <textarea class="form-control" id="addressTextAreaInput" name="address"
                                                rows="3" placeholder="Address (Area and Street)" required></textarea>
                                        </div>
                                    </div>
                                    <div class="row mb-3">
                                        <div class="col">
                                            <input type="text" class="form-control" id="addressCityDistTownInput"
                                                name="cityDistTown" placeholder="City/District/Town" required>
                                        </div>
                                        <div class="col">
                                            <select class="form-select" id="addressStateInput" name="state" required>
                                                <option selected disabled>--Select State--</option>
                                                <option value="Andhra Pradesh">Andhra Pradesh</option>
                                                <option value="Arunachal Pradesh">Arunachal Pradesh</option>
                                                <option value="Assam">Assam</option>
                                                <option value="Bihar">Bihar</option>
                                                <option value="Chhattisgarh">Chhattisgarh</option>
                                                <option value="Goa">Goa</option>
                                                <option value="Gujarat">Gujarat</option>
                                                <option value="Haryana">Haryana</option>
                                                <option value="Himachal Pradesh">Himachal Pradesh</option>
                                                <option value="Jharkhand">Jharkhand</option>
                                                <option value="Karnataka">Karnataka</option>
                                                <option value="Kerala">Kerala</option>
                                                <option value="Madhya Pradesh">Madhya Pradesh</option>
                                                <option value="Maharashtra">Maharashtra</option>
                                                <option value="Manipur">Manipur</option>
                                                <option value="Meghalaya">Meghalaya</option>
                                                <option value="Mizoram">Mizoram</option>
                                                <option value="Nagaland">Nagaland</option>
                                                <option value="Odisha">Odisha</option>
                                                <option value="Punjab">Punjab</option>
                                                <option value="Rajasthan">Rajasthan</option>
                                                <option value="Sikkim">Sikkim</option>
                                                <option value="Tamil Nadu">Tamil Nadu</option>
                                                <option value="Telangana">Telangana</option>
                                                <option value="Tripura">Tripura</option>
                                                <option value="Uttar Pradesh">Uttar Pradesh</option>
                                                <option value="Uttarakhand">Uttarakhand</option>
                                                <option value="West Bengal">West Bengal</option>
                                            </select>
                                        </div>
                                    </div>
                                    <div class="mb-3">
                                        <input type="text" id="addressLandMarkInput" class="form-control"
                                            name="landMark" placeholder="Landmark (Optional)">
                                    </div>
                                    <div class="mb-3">
                                        <input type="tel" id="addressAltPhoneInput" class="form-control" name="altPhone"
                                            placeholder="Alternate Phone (Optional)">
                                    </div>
                                    <div class="mb-3">
                                        <input type="email" id="addressEmailInput" class="form-control" name="email"
                                            placeholder="Email" required>
                                    </div>
                                    <label class="form-label">Address Type</label>
                                    <div>
                                        <div class="form-check form-check-inline">
                                            <input class="form-check-input" type="radio" name="addressType" id="home"
                                                value="home" required>
                                            <label class="form-check-label" for="home">Home</label>
                                        </div>
                                        <div class="form-check form-check-inline">
                                            <input class="form-check-input" type="radio" name="addressType" id="work"
                                                value="work">
                                            <label class="form-check-label" for="work">Work</label>
                                        </div>
                                        <div class="form-check form-check-inline">
                                            <input class="form-check-input" type="radio" name="addressType" id="other"
                                                value="other">
                                            <label class="form-check-label" for="other">Other</label>
                                        </div>
                                    </div>
                                    <button type="submit" id="saveChangesAddressFormButton" class="btn btn-primary">Save
                                        Address</button>
                                </form>
                            </div>

                            <!-- for editing address ends-->

                            <div id="addressForm" style="display: none;">

                                <form id="newAddressForm" method="post" action="/addAddress">

                                    <input type="hidden" name="sourcePage" value="checkout">
                                    <div class="mb-3">
                                        <input type="text" class="form-control" name="name" placeholder="Name" required>
                                    </div>
                                    <div class="mb-3">
                                        <input type="tel" class="form-control" name="phone"
                                            placeholder="10-digit mobile number" required>
                                    </div>
                                    <div class="mb-3">
                                        <input type="text" class="form-control" name="pincode" placeholder="Pincode"
                                            required>
                                    </div>
                                    <div class="row mb-3">
                                        <div class="col">
                                            <input type="text" class="form-control" name="locality"
                                                placeholder="Locality" required>
                                        </div>
                                        <div class="col">
                                            <textarea class="form-control" name="address" rows="3"
                                                placeholder="Address (Area and Street)" required></textarea>
                                        </div>
                                    </div>
                                    <div class="row mb-3">
                                        <div class="col">
                                            <input type="text" class="form-control" name="cityDistTown"
                                                placeholder="City/District/Town" required>
                                        </div>
                                        <div class="col">
                                            <select class="form-select" name="state" required>
                                                <option selected disabled>--Select State--</option>
                                                <option value="Andhra Pradesh">Andhra Pradesh</option>
                                                <option value="Arunachal Pradesh">Arunachal Pradesh</option>
                                                <option value="Assam">Assam</option>
                                                <option value="Bihar">Bihar</option>
                                                <option value="Chhattisgarh">Chhattisgarh</option>
                                                <option value="Goa">Goa</option>
                                                <option value="Gujarat">Gujarat</option>
                                                <option value="Haryana">Haryana</option>
                                                <option value="Himachal Pradesh">Himachal Pradesh</option>
                                                <option value="Jharkhand">Jharkhand</option>
                                                <option value="Karnataka">Karnataka</option>
                                                <option value="Kerala">Kerala</option>
                                                <option value="Madhya Pradesh">Madhya Pradesh</option>
                                                <option value="Maharashtra">Maharashtra</option>
                                                <option value="Manipur">Manipur</option>
                                                <option value="Meghalaya">Meghalaya</option>
                                                <option value="Mizoram">Mizoram</option>
                                                <option value="Nagaland">Nagaland</option>
                                                <option value="Odisha">Odisha</option>
                                                <option value="Punjab">Punjab</option>
                                                <option value="Rajasthan">Rajasthan</option>
                                                <option value="Sikkim">Sikkim</option>
                                                <option value="Tamil Nadu">Tamil Nadu</option>
                                                <option value="Telangana">Telangana</option>
                                                <option value="Tripura">Tripura</option>
                                                <option value="Uttar Pradesh">Uttar Pradesh</option>
                                                <option value="Uttarakhand">Uttarakhand</option>
                                                <option value="West Bengal">West Bengal</option>
                                            </select>
                                        </div>
                                    </div>
                                    <div class="mb-3">
                                        <input type="text" class="form-control" name="landMark"
                                            placeholder="Landmark (Optional)">
                                    </div>
                                    <div class="mb-3">
                                        <input type="tel" class="form-control" name="altPhone"
                                            placeholder="Alternate Phone (Optional)">
                                    </div>
                                    <div class="mb-3">
                                        <input type="email" class="form-control" name="email" placeholder="Email"
                                            required>
                                    </div>
                                    <label class="form-label">Address Type</label>
                                    <div>
                                        <div class="form-check form-check-inline">
                                            <input class="form-check-input" type="radio" name="addressType" id="home"
                                                value="home" required>
                                            <label class="form-check-label" for="home">Home</label>
                                        </div>
                                        <div class="form-check form-check-inline">
                                            <input class="form-check-input" type="radio" name="addressType" id="work"
                                                value="work">
                                            <label class="form-check-label" for="work">Work</label>
                                        </div>
                                        <div class="form-check form-check-inline">
                                            <input class="form-check-input" type="radio" name="addressType" id="other"
                                                value="other">
                                            <label class="form-check-label" for="other">Other</label>
                                        </div>
                                    </div>
                                    <button type="submit" class="btn btn-primary">Save Address</button>
                                    <a href="/checkout" style="display: inline-block; text-decoration: none;"></a>
                                    <!-- <a href="/checkout" style="display: inline-block; text-decoration: none;"></a> -->
                                </form>
                            </div>

                            <br></br>
                            <% if (address.length === 0) { %>
                                <div class="alert alert-info" role="alert">
                                    <strong>No addresses available!</strong> Please add an address to proceed with checkout.
                                </div>
                            <% }else { %>
                            <div class="row">
                                <div class="col-lg-12"> 

                                    <div class="card shadow-sm mb-4">
                                        <div class="card-body">
                                            <div id="addressContainer" class="row">
                                                <% address.forEach((address, index)=> { %>
                                                    <div class="col-md-12 mb-3" id="addressSubContainer<%=address._id%>">
                                                        <div class="card-body">
                                                            <div
                                                                class="d-flex justify-content-between align-items-start">
                                                                <div class="form-check flex-grow-1">
                                                                    <input class="form-check-input" type="radio"
                                                                        name="addressSelection" value="<%= index %>"
                                                                        data-address-id="<%= address._id %>">
                                                                    <label class="form-check-label"
                                                                        for="address_<%= index %>">
                                                                        <%= address.name %><br>
                                                                            <%= address.address %><br>
                                                                                <%= address.cityDistTown %>, <%=
                                                                                        address.state %>
                                                                                        <%= address.pincode %><br>
                                                                                            Phone: <%= address.phone %>
                                                                    </label>
                                                                </div>
                                                                <div class="dropdown  dropdown-menu-end">
                                                                    <a href="#" data-bs-toggle="dropdown">
                                                                        <svg xmlns="http://www.w3.org/2000/svg"
                                                                            width="24" height="24" viewBox="0 0 24 24"
                                                                            fill="none" stroke="currentColor"
                                                                            stroke-width="2" stroke-linecap="round"
                                                                            stroke-linejoin="round">
                                                                            <!-- SVG Path for the three dots icon -->
                                                                            <circle cx="12" cy="5" r="1"></circle>
                                                                            <circle cx="12" cy="12" r="1"></circle>
                                                                            <circle cx="12" cy="19" r="1"></circle>
                                                                        </svg>
                                                                    </a>
                                                                    <div class="dropdown-menu">

                                                                        <a onclick="editAddress('<%=address._id%>','<%= address.addressType %>','<%= address.name %>','<%= address.phone %>','<%= address.address %>','<%= address.locality %>','<%= address.cityDistTown %>','<%= address.state %>','<%= address.pincode %>','<%= address.landMark %>','<%= address.altPhone %>','<%= address.email %>')"
                                                                            class="dropdown-item">Edit info</a>

                                                                    </div>
                                                                </div>
                                                            </div>
                                                        </div>
                                                    </div>
                                                    <% }); %>
                                            </div>
                                        </div>
                                    </div>

                                </div>
                            </div>

                            <% } %>


                        </div>
                    </div>

                    <div class="col-lg-4">
                        <!-- Order Summary Section -->
                        <div class="card mb-3">
                            <div class="card-body">
                                <h5 class="card-title">ORDER SUMMARY</h5>
                                <p class="card-text d-flex justify-content-between">
                                    <span id="selection">SubTotal Amount</span>
                                    <span id="subTotalPrice">Rs
                                        <%=subTotal%>
                                    </span>
                                </p>
                                <input type="hidden" id="couponCode" name="couponCode" value="<%= couponCode %>">
                                <p class="card-text d-flex justify-content-between">
                                    <span id="selection">Coupon Discount</span>
                                    <span id="discount">Rs
                                        <%=discount%>
                                    </span>
                                </p>
                                <p class="card-text d-flex justify-content-between">
                                    <span>Delivery Charges</span>
                                    <span id="deliveryCharge" class="text-success">₹40 Free</span>
                                </p>
                                <hr>
                                <p class="card-text d-flex justify-content-between">
                                    <strong>Total Amount</strong>
                                    <strong><span id="totalPrice">Rs
                                            <%=finalPrice%>
                                        </span></strong>
                                </p>
                            </div>
                        </div>


                        <!-- Payment Method Section -->
                        <div class="card shadow-sm mb-4">
                            <div class="card-body">
                                <h3 class="card-title h5 mb-3">Payment Method</h3>
                                <div class="form-check mb-2">
                                    <input class="form-check-input" type="radio" name="payment_method" id="razorPay"
                                        value="razorPay">
                                    <label class="form-check-label" for="razorPay">
                                       Razor Pay
                                    </label>
                                </div>
                                <div class="form-check">
                                    <input class="form-check-input" type="radio" name="payment_method"
                                        id="cashOnDelivery" value="cashOnDelivery">
                                    <label class="form-check-label" for="cashOnDelivery">
                                        Cash on Delivery
                                    </label>
                                </div>
                                <div class="form-check mb-2">
                                    <input class="form-check-input" type="radio" name="payment_method" id="wallet"
                                        value="wallet">
                                    <label class="form-check-label" for="wallet">
                                       wallet
                                    </label>
                                </div>
                            </div>
                        </div>

                        <button type="submit" class="btn btn-primary btn-lg w-100" id="placeOrder">Place Order</button>
                    </div>
                </div>

            </main>
            <!-- Preloader Start -->
            <div id="preloader-active">
                <div class="preloader d-flex align-items-center justify-content-center">
                    <div class="preloader-inner position-relative">
                        <div class="text-center">
                            <h5 class="mb-5">Now Loading</h5>
                            <div class="loader">
                                <div class="bar bar1"></div>
                                <div class="bar bar2"></div>
                                <div class="bar bar3"></div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <script>
                document.addEventListener('DOMContentLoaded', () => {

                    document.getElementById('showButton').addEventListener('click', function () {
                        var addressForm = document.getElementById('addressForm');
                        if (addressForm.style.display === 'none') {
                            addressForm.style.display = 'block';
                        } else {
                            addressForm.style.display = 'none';
                        }
                    });


                    const razorPay = document.getElementById('razorPay');
                    const cashOnDelivery = document.getElementById('cashOnDelivery');
                    const wallet = document.getElementById('wallet')
                    const placeOrderButton = document.getElementById('placeOrder');
                   


                    placeOrderButton.addEventListener("click", () => {

                        const selectedPaymentMethod = getSelectedPaymentMethod();
                        const selectedAddressId = getSelectedAddressId()
                        const couponCode = document.getElementById('couponCode').value;

                        if (!selectedPaymentMethod && !selectedAddressId) {

                            Swal.fire({
                                icon: 'error',
                                text: 'Please select a payment method and address.',
                                toast: true,
                                position: 'top-right',
                                showConfirmButton: false,
                                timerProgressBar: true,
                                timer: 3000
                            });

                        } else if (!selectedAddressId) {

                            Swal.fire({
                                icon: 'error',
                                text: 'Please select an address.',
                                toast: true,
                                position: 'top-right',
                                showConfirmButton: false,
                                timerProgressBar: true,
                                timer: 3000
                            });

                        } else if (!selectedPaymentMethod) {

                            Swal.fire({
                                icon: 'error',
                                text: 'Please select a payment method.',
                                toast: true,
                                position: 'top-right',
                                showConfirmButton: false,
                                timerProgressBar: true,
                                timer: 3000
                            });

                        } else {

                            fetch('http://localhost:7000/checkout', {
                                method: 'POST',
                                headers: {
                                    'Content-Type': 'application/json',
                                },
                                body: JSON.stringify({ paymentMethod: selectedPaymentMethod, addressId: selectedAddressId,couponCode: couponCode }),
                            })
                                .then(response => response.json())

                                .then(data => {

                                    console.log('Success:', data)
                                    if (data.success) {

                                        if(selectedPaymentMethod === "razorPay"){

                                            const options = {

                                                "key":data.RAZORPAY_ID_KEY,
                                                "amount":data.amount * 100,
                                                "currency":"INR",
                                                "name":"axios watches",
                                                "order_id":data.razorPayOrderPaymentId,
                                                "handler":(response)=>{

                                                    console.log("this is the response from the verify fun",response)

                                                    verifyOnlinePayment(response.razorpay_payment_id,response.razorpay_order_id,response.razorpay_signature,response.amount)
                                                },
                                               
                                            }
                                            const rzp = new Razorpay(options)
                                            rzp.open()

                                        }else{

                                            Swal.fire({
                                            icon: 'success',
                                            text: 'Order placed successfully!',
                                            toast: true,
                                            position: 'top-right',
                                            showConfirmButton: false,
                                            timerProgressBar: true,
                                            timer: 3000
                                        }).then(() => {

                                            window.location.href = "http://localhost:7000/placeOrder";

                                        });
                                        }
                                        
                                    }else{

                                        Swal.fire({
                                        icon: 'error',
                                        text: `${data.message}`,
                                        toast: true,
                                        position: 'top-right',
                                        showConfirmButton: false,
                                        timerProgressBar: true,
                                        timer: 3000
                                    });


                                    }



                                })
                                .catch((error) => {
                                    Swal.fire({
                                        icon: 'error',
                                        text: `An error occurred: ${error.message}`,
                                        toast: true,
                                        position: 'top-right',
                                        showConfirmButton: false,
                                        timerProgressBar: true,
                                        timer: 3000
                                    });

                                });
                        }



                    });

            

         
            const verifyOnlinePayment = (paymentId, orderId, signature,amount) =>{

                console.log(`klkjsdlfasdh`,paymentId, orderId, signature);
                
            fetch('http://localhost:7000/verifyOnlinePayment', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({ paymentId, orderId, signature ,amount }),
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    Swal.fire({
                        icon: 'success',
                        text: 'Payment successful!',
                        toast: true,
                        position: 'top-right',
                        showConfirmButton: false,
                        timerProgressBar: true,
                        timer: 3000
                    }).then(() => {
                          window.location.href = "http://localhost:7000/placeOrder";
                    });
                } else {
                    Swal.fire({
                        icon: 'error',
                        text: 'Payment verification failed. Please contact support.',
                        toast: true,
                        position: 'top-right',
                        showConfirmButton: false,
                        timerProgressBar: true,
                        timer: 3000
                    });
                }
            })
            .catch((error) => {
                console.error('Error:', error);
                Swal.fire({
                    icon: 'error',
                    text: 'An error occurred during payment verification.',
                    toast: true,
                    position: 'top-right',
                    showConfirmButton: false,
                    timerProgressBar: true,
                    timer: 3000
                });
            });
        }

                    function getSelectedPaymentMethod() {

                         if (cashOnDelivery.checked) {
                            return cashOnDelivery.value;
                        } else if (razorPay.checked) {
                            return razorPay.value;
                        }else if(wallet.checked){
                            return wallet.value
                        }
                        return null
                    }

                    function getSelectedAddressId() {

                        const addressRadios = document.getElementsByName('addressSelection')
                        let selectedAddressId = null;
                        addressRadios.forEach(radio => {
                            if (radio.checked) {

                                selectedAddressId = radio.getAttribute('data-address-id');

                            }

                        });

                        return selectedAddressId;

                    }


                })
              


                const editAddress = (id, addressType, addressName, addressPhone, address, addressLocality, addressCityDistTown, addressState, addressPincode, addressLandMark, addressAltPhone, addressEmail) => {


                    console.log(id, addressType, addressName, addressPhone, address, addressLocality, addressCityDistTown, addressState, addressPincode, addressLandMark, addressAltPhone, addressEmail)


                    const addressNameInput = document.getElementById('addressNameInput');
                    const addressPhoneInput = document.getElementById('addressPhoneInput');
                    const addressPincodeInput = document.getElementById('addressPincodeInput');
                    const addressLocalityInput = document.getElementById('addressLocalityInput');
                    const addressTextAreaInput = document.getElementById('addressTextAreaInput');
                    const addressCityDistTownInput = document.getElementById('addressCityDistTownInput');
                    const addressStateInput = document.getElementById('addressStateInput');
                    const addressLandMarkInput = document.getElementById('addressLandMarkInput');
                    const addressAltPhoneInput = document.getElementById('addressAltPhoneInput');
                    const addressEmailInput = document.getElementById('addressEmailInput');
                    const addressTypeHome = document.getElementById('home');
                    const addressTypeWork = document.getElementById('work');
                    const addressTypeOther = document.getElementById('other');
                    const editAddressForm = document.getElementById('editAddressForm')

                    addressNameInput.value = addressName;
                    addressPhoneInput.value = addressPhone;
                    addressPincodeInput.value = addressPincode;
                    addressLocalityInput.value = addressLocality;
                    addressTextAreaInput.value = address;
                    addressCityDistTownInput.value = addressCityDistTown;
                    addressStateInput.value = addressState;
                    addressLandMarkInput.value = addressLandMark;
                    addressAltPhoneInput.value = addressAltPhone;
                    addressEmailInput.value = addressEmail;

                    if (addressType === 'home') {

                        addressTypeHome.checked = true;

                    } else if (addressType === 'work') {

                        addressTypeWork.checked = true;

                    } else {

                        addressTypeOther.checked = true;

                    }

                    if (editAddressForm.style.display === 'none') {

                        editAddressForm.style.display = 'block';

                    } else {
                        editAddressForm.style.display = 'none';

                    }

                    const saveChangesAddressFormButton = document.getElementById('saveChangesAddressFormButton')

                    saveChangesAddressFormButton.addEventListener("click", (event) => {

                        event.preventDefault()

                        Swal.fire({
                            title: 'Confirm Update',
                            text: 'Are you sure you want to save these changes? This action cannot be undone.',
                            icon: 'warning',
                            showCancelButton: true,
                            confirmButtonText: 'Yes, save changes',
                            cancelButtonText: 'No, cancel',
                            reverseButtons: true
                        }).then((result) => {

                            if (result.isConfirmed) {

                                const updatedAddress = {

                                    id,
                                    addressType: document.querySelector('input[name="addressType"]:checked').value,
                                    name: addressNameInput.value,
                                    phone: addressPhoneInput.value,
                                    address: addressTextAreaInput.value,
                                    locality: addressLocalityInput.value,
                                    cityDistTown: addressCityDistTownInput.value,
                                    state: addressStateInput.value,
                                    pincode: addressPincodeInput.value,
                                    landMark: addressLandMarkInput.value,
                                    altPhone: addressAltPhoneInput.value,
                                    email: addressEmailInput.value

                                }


                                fetch(`http://localhost:7000/editAddress/`, {


                                    method: "PUT",
                                    headers: {

                                        'Content-Type': 'application/json',

                                    },
                                    body: JSON.stringify({ updatedAddress, id })
                                }).then(response => {

                                    if (!response.ok) {

                                        throw new Error(`Network response was not ok`)
                                    }

                                    return response.json()


                                }).then((data) => {


                                    console.log(`data received to checkout page after editing address`, data.updatedUserAddress);

                                    if (data.success) {


                                        updateNewAddress(id, data.updatedUserAddress);

                                        Swal.fire({
                                            icon: 'success',
                                            text: `${data.updatedUserAddress.addressType} address successfully updated.`,
                                            toast: true,
                                            position: 'top-right',
                                            showConfirmButton: false,
                                            timerProgressBar: true,
                                            timer: 3000
                                        });
                                    }

                                    editAddressForm.style.display = 'none';


                                }).catch(error => {

                                    Swal.fire({
                                        icon: 'error',
                                        text: `An error occurred: ${error.message}`,
                                        toast: true,
                                        position: 'top-right',
                                        showConfirmButton: false,
                                        timerProgressBar: true,
                                        timer: 3000
                                    });

                                })

                            }
                        })

                    })

                }
                const updateNewAddress = (id, updatedUserAddress) => {

                    
                    document.getElementById(`addressSubContainer${id}`).innerHTML = `
        <div class="card-body">
    <div class="d-flex justify-content-between align-items-start">
        <div class="form-check flex-grow-1">
            <input class="form-check-input" type="radio" name="addressSelection" value="${updatedUserAddress._id}" data-address-id="${updatedUserAddress._id}">
            <label class="form-check-label" for="address_${updatedUserAddress._id}">
                ${updatedUserAddress.name}<br>
                ${updatedUserAddress.address}<br>
                ${updatedUserAddress.cityDistTown}, ${updatedUserAddress.state} - ${updatedUserAddress.pincode}<br>
                Phone: ${updatedUserAddress.phone}
            </label>
        </div>
        <div class="dropdown dropdown-menu-end">
            <a href="#" data-bs-toggle="dropdown">
                <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                    <circle cx="12" cy="5" r="1"></circle>
                    <circle cx="12" cy="12" r="1"></circle>
                    <circle cx="12" cy="19" r="1"></circle>
                </svg>
            </a>
            <div class="dropdown-menu">
                <a onclick="editAddress('${updatedUserAddress._id}', '${updatedUserAddress.addressType}', '${updatedUserAddress.name}', '${updatedUserAddress.phone}', '${updatedUserAddress.address}', '${updatedUserAddress.locality}', '${updatedUserAddress.cityDistTown}', '${updatedUserAddress.state}', '${updatedUserAddress.pincode}', '${updatedUserAddress.landMark}', '${updatedUserAddress.altPhone}', '${updatedUserAddress.email}')" class="dropdown-item">Edit info</a>
                <a onclick="removeAddress('${updatedUserAddress._id}')" class="dropdown-item text-danger">Delete</a>
            </div>
        </div>
    </div>
</div>`;
                };

            </script>
            <!-- Vendor JS -->
            <script src="assets/js/vendor/modernizr-3.6.0.min.js"></script>
            <script src="assets/js/vendor/jquery-3.6.0.min.js"></script>
            <script src="assets/js/vendor/jquery-migrate-3.3.0.min.js"></script>
            <script src="assets/js/vendor/bootstrap.bundle.min.js"></script>
            <script src="assets/js/plugins/slick.js"></script>
            <script src="assets/js/plugins/jquery.syotimer.min.js"></script>
            <script src="assets/js/plugins/wow.js"></script>
            <script src="assets/js/plugins/jquery-ui.js"></script>
            <script src="assets/js/plugins/perfect-scrollbar.js"></script>
            <script src="assets/js/plugins/magnific-popup.js"></script>
            <script src="assets/js/plugins/select2.min.js"></script>
            <script src="assets/js/plugins/waypoints.js"></script>
            <script src="assets/js/plugins/counterup.js"></script>
            <script src="assets/js/plugins/jquery.countdown.min.js"></script>
            <script src="assets/js/plugins/images-loaded.js"></script>
            <script src="assets/js/plugins/isotope.js"></script>
            <script src="assets/js/plugins/scrollup.js"></script>
            <script src="assets/js/plugins/jquery.vticker-min.js"></script>
            <script src="assets/js/plugins/jquery.theia.sticky.js"></script>
            <!-- Template  JS -->
            <script src="./assets/js/main.js?v=3.4"></script>
            <script src="./assets/js/shop.js?v=3.4"></script>

            <!-- sweet alert js file from the installed npm install sweetalert2 library -->
            <script src="/modules/sweetalert2/dist/sweetalert2.min.js"></script>

            </body>

            </html>