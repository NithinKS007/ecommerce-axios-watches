<%- include('../layouts/adminLayouts/header') %>
<div class="screen-overlay"></div>
<%- include('../layouts/adminLayouts/sidebar') %>
<main class="main-wrap">
  <%- include('../layouts/adminLayouts/searchbar') %>
  <section class="content-main">
    <div class="content-header">
      <div>
        <h2 class="content-title card-title">Customers</h2>
        <p>Dashboard> customers</p>
      </div>
    </div>

    <div class="card mb-4">
      <header class="card-header">
        <form
          action="/admin/customers"
          method="get"
          style="padding-left: 20px; padding-right: 20px"
        >
          <div class="row gx-3">
            <!-- Search Input with Button -->
            <div class="col-lg-4 col-md-6 me-auto" style="margin-top: 20px">
              <div class="input-group w-100">
                <input
                  type="text"
                  name="search"
                  class="form-control"
                  placeholder="Search term"
                  value="<%= search %>"
                />
                <button class="btn btn-light bg" type="submit">
                  <i class="material-icons md-search"></i>
                </button>
              </div>
            </div>

            <!-- Status Filter Dropdown -->
            <div class="col-lg-2 col-6 col-md-3" style="margin-top: 20px">
              <select
                name="status"
                class="form-select"
                onchange="this.form.submit();"
              >
            <option value="" <%= statusFilter === '' ? 'selected' : '' %>>Status</option>
            <option value="Active" <%= statusFilter === 'Active' ? 'selected' : '' %>>Active</option>
            <option value="Disabled" <%= statusFilter === 'Disabled' ? 'selected' : '' %>>Disabled</option>
            <option value="" <%= statusFilter === '' ? 'selected' : '' %>>Show all</option>
            </select>
            </div>
          </div>
        </form>
      </header>

      <!-- table content starts -->
      <div class="card-body">
        <div class="table-responsive">
          <table class="table table-hover">
            <thead>
              <tr>
                <th>Sl.No.</th>
                <th scope="col">Name</th>
                <th scope="col">Email</th>
                <th scope="col">Phone</th>
                <th scope="col">Reg.Date</th>
                <th scope="col" class="text-center">Action</th>
              </tr>
            </thead>
            <tbody>
              <%if(userData.length>0) { %> <%for(let i=0;i < userData.length;
              i++) { %>
              <tr>
                <td><%= i + 1 %></td>
                <td><%= userData[i].fname +" "+userData[i].lname%></td>
                <td><%= userData[i].email %></td>
                <td><%= userData[i].phone %></td>
                <td><%= new Date(userData[i].createdAt).toLocaleString() %></td>
                <td>
                  <div class="d-flex justify-content-end">
                    <% if(userData[i].isBlocked) { %>

                    <button
                      style="
                        width: 120px;
                        height: 40px;
                        font-size: 14px;
                        padding: 0.5rem;
                      "
                      onclick="softDeleteUser('<%= userData[i]._id %>')"
                      id="softDeleteButton<%= userData[i]._id %>"
                      class="btn btn-success rounded btn-sm font-sm flex-fill mx-1"
                    >
                      Unblock
                    </button>

                    <% } else { %>

                    <button
                      style="
                        width: 120px;
                        height: 40px;
                        font-size: 14px;
                        padding: 0.5rem;
                      "
                      onclick="softDeleteUser('<%= userData[i]._id %>')"
                      id="softDeleteButton<%= userData[i]._id %>"
                      class="btn btn-danger rounded btn-sm font-sm flex-fill mx-1"
                    >
                      Block
                    </button>

                    <% } %>
                  </div>
                </td>
              </tr>
              <%}%> <%}else {%>
              <tr></tr>
              <tr>
                <td colspan="5">No Users Found Yet</td>
              </tr>
              <%}%>
            </tbody>
          </table>
        </div>
        <!-- table-responsive //end -->
      </div>
      <!-- card-body end// -->
    </div>
    <!-- card end// -->

    <!-- pagination starts -->

    <div class="pagination-area mt-30 mb-50">
      <nav aria-label="Page navigation example">
        <ul class="pagination justify-content-start">
          <% if (currentPage > 1) { %>
          <li class="page-item">
            <a
              class="page-link"
              href="/admin/customers?page=<%= currentPage - 1 %>"
            >
              <strong>&lt;</strong>
            </a>
          </li>
          <% } %> <% let startPage = Math.max(1, currentPage - 2); let endPage =
          Math.min(totalPages, startPage + 4); if (endPage - startPage < 4) {
          startPage = Math.max(1, endPage - 4); } %> <% for (let i = startPage;
          i <= endPage; i++) { %>
          <li class="page-item <%= i === currentPage ? 'active' : '' %>">
            <a class="page-link" href="/admin/customers?page=<%= i %>"
              ><strong><%= i %></strong></a
            >
          </li>
          <% } %> <% if (currentPage < totalPages) { %>
          <li class="page-item">
            <a
              class="page-link"
              href="/admin/customers?page=<%= currentPage + 1 %>"
            >
              <strong>&gt;</strong>
            </a>
          </li>
          <% } %>
        </ul>
      </nav>
    </div>
    <!-- pagination end -->
  </section>
  <!-- content-main end// -->
</main>
<script>
    const applySwalButtonStyles = () => {
    const confirmButton = Swal.getConfirmButton();
    const cancelButton = Swal.getCancelButton();

    confirmButton.style.width = '100%';
    confirmButton.style.margin = '5px 0';
    confirmButton.style.border = '1px solid #000';
    confirmButton.style.borderRadius = '0.25rem';
    confirmButton.style.backgroundColor = '#000';
    confirmButton.style.color = '#fff';

    cancelButton.style.width = '100%';
    cancelButton.style.margin = '5px 0';
    cancelButton.style.border = '1px solid #000';
    cancelButton.style.borderRadius = '0.25rem';
    cancelButton.style.color = '#000';

    if (window.innerWidth <= 768) {
        confirmButton.style.width = '100%';
        cancelButton.style.width = '100%';
    } else if (window.innerWidth > 768 && window.innerWidth <= 992) {
        confirmButton.style.width = '150px';
        cancelButton.style.width = '150px';
    }
  };

 const softDeleteUser = async (userId) => {
  const deleteButton = document.getElementById(`softDeleteButton${userId}`);
  const isBlocking = deleteButton.classList.contains("btn-danger");

  const result = await Swal.fire({
    title: `Are you sure you want to ${
      isBlocking ? "block" : "unblock"
    } this person?`,
    icon: "warning",
    showCancelButton: true,
    confirmButtonColor: "#d33",
    cancelButtonColor: "#ffffff",
    confirmButtonText: `Yes, ${isBlocking ? "block" : "unblock"}`,
    didOpen: () => {
      applySwalButtonStyles();
    },
  });

  if (result.isConfirmed) {
    try {
      const response = await fetch(`/admin/customers/${userId}`, {
        method: "PATCH",
        headers: {
          "Content-Type": "application/json",
        },
      });

      if (!response.ok) {
        const errorData = await response.json();
        throw new Error(
          `Error ${response.status}: ${errorData.message || "Unknown error"}`
        );
      }

      const data = await response.json();

      if (data.userData.isBlocked) {
          deleteButton.classList.remove("btn-danger");
          deleteButton.classList.add("btn-success");
          deleteButton.textContent = "Unblock";
          Swal.fire({
            title: "Blocked!",
            text: "This person no longer has access.",
            icon: "success",
            toast: true,
            position: "top-right",
            showConfirmButton: false,
            timerProgressBar: true,
            timer: 3000,
          });
        } else {
          deleteButton.classList.remove("btn-success");
          deleteButton.classList.add("btn-danger");
          deleteButton.textContent = "Block";
          Swal.fire({
            title: "Unblocked!",
            text: "This person now has access.",
            icon: "success",
            toast: true,
            position: "top-right",
            showConfirmButton: false,
            timerProgressBar: true,
            timer: 3000,
          });
        }
    } catch (error) {
      console.log(`There was a problem with the fetch operation:`, error);

      await Swal.fire({
        title: "Error!",
        text: `There was a problem blocking/unblocking the person. ${
          error.message || "Please try again."
        }`,
        icon: "error",
        toast: true,
        position: "top-right",
        showConfirmButton: false,
        timerProgressBar: true,
        timer: 3000,
      });
    }
  }
};

</script>
<%- include('../layouts/adminLayouts/footer') %>
