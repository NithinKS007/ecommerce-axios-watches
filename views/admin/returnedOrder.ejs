<%- include('../layouts/adminLayouts/header') %>
<div class="screen-overlay"></div>
<%- include('../layouts/adminLayouts/sidebar') %>
<main class="main-wrap">
    <%- include('../layouts/adminLayouts/searchbar') %>
    <section class="content-main">
        <div class="content-header">
            <div>
                <h2 class="content-title card-title">Return Details</h2>
                <p>Dashboard > Return Details</p>
            </div>
        </div>
        <div class="card mb-4">
            <header class="card-header">
                <div class="row gx-3">
                    <div class="col-lg-4 col-md-6 me-auto">
                        <input type="text" placeholder="Search..." class="form-control">
                    </div>
                    <div class="col-lg-2 col-6 col-md-3">
                        <select class="form-select">
                            <option>Status</option>
                            <option>Initiated</option>
                            <option>Approved</option>
                            <option>Rejected</option>
                            <option>Cancelled</option>
                        </select>
                    </div>
                </div>
            </header>
            <!-- table content starts -->
            <div class="card-body">
                <div class="table-responsive">
                    <% if (returnedOrderData.length > 0) { %>
                    <table class="table table-hover">
                        <thead>
                            <tr>
                                <th scope="col">Email</th>
                                <th scope="col">Customer Name</th>
                                <th scope="col">Order ID</th>
                                <th scope="col">Product ID</th>
                                <th scope="col">Product Refund Amount</th>
                                <th scope="col">Product Return Reason</th>
                                <th scope="col">Status</th>
                                <th scope="col">Date</th>
                                <th scope="col" class="text-end">Action</th>
                            </tr>
                        </thead>
                        <tbody>
                            <% returnedOrderData.forEach(returnedOrder => { %>
                                <tr>
                                    <td><%= returnedOrder.userId.email %></td>
                                    <td><b><%= returnedOrder.userId.fname %> <%= returnedOrder.userId.lname %></b></td>
                                    <td><%= returnedOrder.orderId.toString() %></td>
                                    <td><%= returnedOrder.productId.toString() %></td>
                                    <td><%= returnedOrder.productRefundAmount %></td>
                                    <td><%= returnedOrder.productReturnReason %></td>
                                    <td id="statusUpdate<%= returnedOrder._id %>"><span class="badge rounded-pill alert-warning"><%= returnedOrder.returnProductStatus %></span></td>
                                    <td><%= new Date(returnedOrder.productReturnDate).toLocaleString() %></td>
                                    <td id="statusContainer<%= returnedOrder._id %>">
                                        <% if (returnedOrder.returnProductStatus === "approved") { %>
                                            <p style="width: 240px; text-align: center;">Return approved</p>
                                        <% } else if (returnedOrder.returnProductStatus === "rejected") { %>
                                            <p style="width: 240px; text-align: center;">Return rejected</p>
                                        <% } else { %>
                                            <div id="buttonsContainer<%= returnedOrder._id %>" style="display: inline-flex; gap: 5px; width: 100%;">
                                                <a class="btn btn-md rounded font-sm btn-success" 
                                                   style="background-color: #28a745; border-color: #28a745; flex: 1; text-align: center; width: 120px;" 
                                                   onclick="approved('<%= returnedOrder._id %>')">
                                                   Approve
                                                </a>
                                                <a class="btn btn-md rounded font-sm btn-danger" 
                                                   style="background-color: #dc3545; border-color: #dc3545; flex: 1; text-align: center; width: 120px;" 
                                                   onclick="rejected('<%= returnedOrder._id %>')">
                                                   Reject
                                                </a>
                                            </div>
                                        <% } %>
                                    </td>
                                </tr>
                            <% }); %>
                        </tbody>
                    </table>
                    <% } else { %>
                        <p class="text-center">No returned products to show</p>
                    <% } %>
                </div>
            </div>
        </div>
    </section> <!-- content-main end// -->
</main>







<script>
const changeReturnStatus = (returnOrderDocId, status ,addToInventory) => {
    console.log(`Changing return status for product ID ${returnOrderDocId} to ${status}`);

    Swal.fire({
        title: 'Are you sure?',
        text: "You are about to change the return status of this product.",
        icon: 'warning',
        showCancelButton: true,
        confirmButtonColor: '#3085d6',
        cancelButtonColor: '#d33',
        confirmButtonText: 'Yes, change it!'
    }).then((result) => {
        if (result.isConfirmed) {
            fetch('http://localhost:7000/admin/updateReturnStatus', {
                method: 'PATCH',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({ returnOrderDocId, status,addToInventory }),
            }).then((response) => {
                if (!response.ok) {
                    return response.json().then(errorData => {
                        throw new Error(errorData.error || "Network response was not ok");
                    });
                }
                return response.json();
            }).then((data) => {
                console.log(data);
                if (data.success) {
                    Swal.fire({
                        icon: 'success',
                        text: 'The return status has been updated successfully.',
                        toast: true,
                        position: 'top-right',
                        showConfirmButton: false,
                        timerProgressBar: true,
                        timer: 3000
                    });

                    const statusContainer = document.getElementById(`statusContainer${returnOrderDocId}`);
                    const buttonsContainer = document.getElementById(`buttonsContainer${returnOrderDocId}`);
                    const statusElement = document.getElementById(`statusUpdate${returnOrderDocId}`);

                    if (data.returnApproved) {
                        if (statusContainer) {
                            statusContainer.innerHTML = `<p style="width: 240px; text-align: center">Return approved</p>`;
                        }
                        if (buttonsContainer) {
                            buttonsContainer.style.display = 'none';
                        }
                        if (statusElement) {
                            statusElement.innerHTML = `<span class="badge rounded-pill alert-warning">${data.updatedStatus}</span>`;
                        }
                    } else {
                        if (statusContainer) {
                            statusContainer.innerHTML = `<p style="width: 240px; text-align: center">Return rejected</p>`;
                        }
                        if (buttonsContainer) {
                            buttonsContainer.style.display = 'none';
                        }
                        if (statusElement) {
                            statusElement.innerHTML = `<span class="badge rounded-pill alert-warning">${data.updatedStatus}</span>`
                        }
                    }
                }
                    
              
            }).catch((error) => {
                console.log(`Error while updating return status:`, error.message);
                Swal.fire({
                    icon: 'error',
                    text: `Error: ${error.message}`,
                    toast: true,
                    position: 'top-right',
                    showConfirmButton: false,
                    timerProgressBar: true,
                    timer: 3000
                });
            });
        }
    });
};

const approved = async (returnOrderDocId) => {

    Swal.fire({
        title: 'Approve Return?',
        text: 'Do you want to approve this return?',
        icon: 'warning',
        showCancelButton: true,
        confirmButtonColor: '#3085d6',
        cancelButtonColor: '#d33',
        confirmButtonText: 'Yes, approve it!'
    }).then((result) => {
        if (result.isConfirmed) {
            Swal.fire({
                title: 'Add to Inventory?',
                text: 'Do you want to add this product to inventory?',
                icon: 'question',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Yes, add it!',
                cancelButtonText: 'No, do not add'
            }).then((result) => {
                if (result.isConfirmed) {
                    changeReturnStatus(returnOrderDocId, "approved", true);
                } else {
                    changeReturnStatus(returnOrderDocId, "approved", false);
                }
            });
        }
    });
};

const rejected = async (returnOrderDocId) => {
    console.log(`this is the product id for rejection`, returnOrderDocId);

    Swal.fire({
        title: 'Reject Return?',
        text: 'Are you sure you want to reject this return?',
        icon: 'warning',
        showCancelButton: true,
        confirmButtonColor: '#3085d6',
        cancelButtonColor: '#d33',
        confirmButtonText: 'Yes, reject it!'
    }).then((result) => {
        if (result.isConfirmed) {

            changeReturnStatus(returnOrderDocId, "rejected", false);
        }
    });
};

</script>
<%- include('../layouts/adminLayouts/footer') %>
