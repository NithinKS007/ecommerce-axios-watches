<%- include('../layouts/adminLayouts/header') %>
<div class="screen-overlay"></div>
<%- include('../layouts/adminLayouts/sidebar') %>
<main class="main-wrap">
  <%- include('../layouts/adminLayouts/searchbar') %>

  <section class="content-main">
    <div class="row">
      <!-- Content Header -->
      <div class="col-12 mb-3">
        <div class="content-header">
          <h2 class="content-title">ADD A NEW COUPON</h2>
        </div>
      </div>

      <!-- Main Content -->
      <div class="col-lg-9">
        <div class="card mb-4">
          <div class="card-header">
            <h4>Coupon Details</h4>
          </div>
          <div class="card-body">
            <form id="couponForm">
              <!-- Coupon Name -->
              <div class="mb-4">
                <label for="couponName" class="form-label">Coupon Name</label>
                <input
                  type="text"
                  name="couponName"
                  placeholder="Type here"
                  class="form-control"
                  id="couponName"
                />
                <span
                  id="couponNameError"
                  class="error"
                  style="font-size: 0.8em; color: red"
                ></span>
              </div>
              <!-- Description -->
              <div class="mb-4">
                <label class="form-label">Description</label>
                <textarea
                  name="couponDescription"
                  id="couponDescription"
                  placeholder="Type here"
                  class="form-control"
                  rows="4"
                ></textarea>
                <span
                  id="couponDescriptionError"
                  class="error"
                  style="font-size: 0.8em; color: red"
                ></span>
              </div>
              <!-- Coupon Code -->
              <div class="mb-4">
                <label for="couponCode" class="form-label">Coupon Code</label>
                <input
                  type="text"
                  name="couponCode"
                  placeholder="Type here"
                  class="form-control"
                  id="couponCode"
                />
                <button
                  type="button"
                  class="btn btn-primary"
                  id="generateCouponCode"
                  style="margin-top: 10px"
                >
                  Generate Coupon Code
                </button>
                <span
                  id="couponCodeError"
                  class="error"
                  style="font-size: 0.8em; color: red"
                ></span>
              </div>

              <!-- Discount Amount -->
              <div class="mb-4">
                <label for="couponDiscount" class="form-label"
                  >Discount Percentage</label
                >
                <input
                  type="number"
                  name="couponDiscount"
                  placeholder="Percentage (0-100)"
                  class="form-control"
                  id="couponDiscount"
                  min="0"
                  max="100"
                />
                <span
                  id="couponDiscountError"
                  class="error"
                  style="font-size: 0.8em; color: red"
                ></span>
              </div>
              <!-- Discount Amount -->

              <!-- Min Amount -->
              <div class="mb-4">
                <label for="minAmount" class="form-label"
                  >Minimum Purchase Amount</label
                >
                <input
                  type="number"
                  name="minAmount"
                  placeholder="Amount"
                  class="form-control"
                  id="minAmount"
                />
                <span
                  id="minAmountError"
                  class="error"
                  style="font-size: 0.8em; color: red"
                ></span>
              </div>

              <!-- Max Amount -->
              <div class="mb-4">
                <label for="maxAmount" class="form-label"
                  >Maximum Discount Amount</label
                >
                <input
                  type="number"
                  name="maxAmount"
                  placeholder="Amount"
                  class="form-control"
                  id="maxAmount"
                />
                <span
                  id="maxAmountError"
                  class="error"
                  style="font-size: 0.8em; color: red"
                ></span>
              </div>

              <!-- Coupon Status -->
              <div class="mb-4">
                <label class="form-label">Status</label>
                <select class="form-select" name="couponStatus">
                  <option value="true">Active</option>
                  <option value="false">Inactive</option>
                </select>
              </div>
              <% if (message) { %>
              <div
                class="error"
                style="
                  font-size: 1.5em;
                  color: red;
                  text-align: center;
                  font-weight: bold;
                  padding: 10px 15px;
                  font-size: 0.8em;
                  margin-top: 10px;
                "
              >
                <%= message %>
              </div>
              <% } %>

              <div
                style="
                  display: flex;
                  justify-content: center;
                  padding-top: 15px;
                "
              >
                <button
                  class="btn btn-md rounded font-sm hover-up"
                  id="submitForm"
                  type="submit"
                >
                  Add Coupon
                </button>
              </div>
            </form>
          </div>
        </div>
      </div>
    </div>
  </section>
</main>
<%- include('../layouts/adminLayouts/footer') %>

<script>
  document.addEventListener("DOMContentLoaded", () => {
    const generateCouponCode = () => {
      const characters = "ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789-_";
      let couponCode = "";
      const couponLength = Math.floor(Math.random() * (20 - 5 + 1)) + 5;

      for (let i = 0; i < couponLength; i++) {
        const randomIndex = Math.floor(Math.random() * characters.length);
        couponCode += characters[randomIndex];
      }

      return couponCode;
    };

    document
      .getElementById("generateCouponCode")
      .addEventListener("click", () => {
        const couponCodeInput = document.getElementById("couponCode");
        const generatedCode = generateCouponCode();
        couponCodeInput.value = generatedCode;

        validateCouponCode();
      });

    const clearError = (input, errorElement) => {
      input.addEventListener("focus", () => {
        errorElement.textContent = "";
      });
    };
    const validateField = (input, errorElement, errorMessage) => {
      if (input.value.trim() === "") {
        errorElement.textContent = errorMessage;
        return false;
      } else {
        errorElement.textContent = "";
        return true;
      }
    };

    const validateCouponName = () => {
      const input = document.getElementById("couponName");
      const errorElement = document.getElementById("couponNameError");
      const value = input.value.trim();
      if (value === "") {
        errorElement.textContent = "* Coupon Name is required";
        return false;
      } else if (value.length < 3 || value.length > 50) {
        errorElement.textContent =
          "* Coupon Name must be between 3 and 50 characters long";
        return false;
      } else {
        errorElement.textContent = "";
        return true;
      }
    };

    const validateDescription = () => {
      const input = document.getElementById("couponDescription");
      const errorElement = document.getElementById("couponDescriptionError");
      const value = input.value.trim();
      if (value === "") {
        errorElement.textContent = "* Description is required";
        return false;
      } else if (value.length > 200) {
        errorElement.textContent =
          "* Description must not exceed 200 characters";
        return false;
      } else {
        errorElement.textContent = "";
        return true;
      }
    };

    const validateCouponCode = () => {
      const input = document.getElementById("couponCode");
      const errorElement = document.getElementById("couponCodeError");
      const value = input.value.trim();
      const regex = /^[A-Z0-9-_]{5,20}$/;
      if (value === "") {
        errorElement.textContent = "* Coupon Code is required";
        return false;
      } else if (!regex.test(value)) {
        errorElement.textContent =
          "* Coupon Code must be 5-20 characters long and contain only uppercase letters, numbers, hyphens, or underscores";
        return false;
      } else {
        errorElement.textContent = "";
        return true;
      }
    };

    const validateCouponDiscount = () => {
      const input = document.getElementById("couponDiscount");
      const errorElement = document.getElementById("couponDiscountError");
      const value = parseFloat(input.value);
      if (isNaN(value) || value < 0 || value > 70) {
        errorElement.textContent =
          "* Discount Percentage must be between 0 and 70";
        return false;
      } else {
        errorElement.textContent = "";
        return true;
      }
    };
    const validateMaxAmount = () => {
      const maxInput = document.getElementById("maxAmount");
      const minInput = document.getElementById("minAmount");
      const errorElement = document.getElementById("maxAmountError");
      const maxValue = parseFloat(maxInput.value);
      const minValue = parseFloat(minInput.value);
      const couponDiscountPercentInput =
        document.getElementById("couponDiscount");

      const calculatedMax = Math.floor(
        minValue * Number(couponDiscountPercentInput.value / 100)
      );

      if (isNaN(maxValue) || maxValue <= 0) {
        errorElement.textContent =
          "* Maximum Discount Amount must be greater than zero";
        return false;
      } else if (Number(maxValue) <= calculatedMax) {
        errorElement.textContent = `* Maximum Discount Amount cannot be less than the calculated maximum discount of ${calculatedMax}`;
        return false;
      } else {
        errorElement.textContent = "";
        return true;
      }
    };

    const validateMinAmount = () => {
      const maxInput = document.getElementById("maxAmount");
      const minInput = document.getElementById("minAmount");
      const errorElement = document.getElementById("minAmountError");
      const maxValue = parseFloat(maxInput.value);
      const minValue = parseFloat(minInput.value);
      if (isNaN(minValue) || minValue < 0) {
        errorElement.textContent =
          "* Minimum Purchase Amount must be zero or greater";
        return false;
      } else {
        errorElement.textContent = "";
        return true;
      }
    };

    document
      .getElementById("couponName")
      .addEventListener("input", validateCouponName);
    document
      .getElementById("couponDescription")
      .addEventListener("input", validateDescription);
    document
      .getElementById("couponCode")
      .addEventListener("input", validateCouponCode);
    document
      .getElementById("couponDiscount")
      .addEventListener("input", validateCouponDiscount);
    document.getElementById("minAmount").addEventListener("input", () => {
      validateMinAmount();
      validateMaxAmount();
    });
    document.getElementById("maxAmount").addEventListener("input", () => {
      validateMinAmount();
      validateMaxAmount();
    });

    clearError(
      document.getElementById("couponName"),
      document.getElementById("couponNameError")
    );
    clearError(
      document.getElementById("couponDescription"),
      document.getElementById("couponDescriptionError")
    );
    clearError(
      document.getElementById("couponCode"),
      document.getElementById("couponCodeError")
    );
    clearError(
      document.getElementById("couponDiscount"),
      document.getElementById("couponDiscountError")
    );
    clearError(
      document.getElementById("minAmount"),
      document.getElementById("minAmountError")
    );
    clearError(
      document.getElementById("maxAmount"),
      document.getElementById("maxAmountError")
    );

    // Form Submission Validation
    const form = document.getElementById("couponForm");
    form.addEventListener("submit", async (event) => {
      event.preventDefault();
      const isCouponNameValid = validateCouponName();
      const isDescriptionValid = validateDescription();
      const isCouponCodeValid = validateCouponCode();
      const isCouponDiscountValid = validateCouponDiscount();
      const isMaxAmountValid = validateMaxAmount();
      const isMinAmountValid = validateMinAmount();

      if (
        !isCouponNameValid ||
        !isDescriptionValid ||
        !isCouponCodeValid ||
        !isCouponDiscountValid ||
        !isMaxAmountValid ||
        !isMinAmountValid
      ) {
        return;
      }

      const couponData = {
        couponName: document.getElementById("couponName").value,
        couponDescription: document.getElementById("couponDescription").value,
        couponCode: document.getElementById("couponCode").value,
        couponDiscount: document.getElementById("couponDiscount").value,
        minAmount: document.getElementById("minAmount").value,
        maxAmount: document.getElementById("maxAmount").value,
        couponStatus: document.querySelector("select[name='couponStatus']")
          .value,
      };

      try {
        const response = await fetch("/admin/coupons", {
          method: "POST",
          headers: {
            "Content-Type": "application/json",
          },
          body: JSON.stringify(couponData),
        });

        if (!response.ok) {
          const errorData = await response.json();
          throw new Error(`${errorData.message || "Unknown error"}`);
        }

        const data = await response.json();

        await Swal.fire({
          title: "Success!",
          text: "Coupon added successfully.",
          icon: "success",
          toast: true,
          position: "top-right",
          showConfirmButton: false,
          timerProgressBar: true,
          timer: 3000,
        });
        window.location.href = `/admin/coupons?view=list`;
      } catch (error) {
        await Swal.fire({
          title: `${
            error.couponNameExists || error.couponCodeExists ? "Error!" : "Info"
          }`,
          text: `${error.message || "Please try again."}`,
          icon: `${
            error.couponNameExists || error.couponCodeExists ? "error" : "info"
          }`,
          toast: true,
          position: "top-right",
          showConfirmButton: false,
          timerProgressBar: true,
          timer: 3000,
        });
      }
    });
  });
</script>
